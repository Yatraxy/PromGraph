#Reverse proxy, front, back, db
services:

  nginx:
    image: nginx:alpine
    container_name: nginx
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    networks:
      - node-network
      - monitoring-network
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/logs:/var/log/nginx
    ports:
      - "8080:80"
    healthcheck:
      test: curl --fail http://localhost/health || exit 1
      interval: 10s
      timeout: 10s
      retries: 5
  frontend: 
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=/api
    networks:
      - node-network
      - front-network
    expose:
      - "3002"
    healthcheck:
      test: curl --fail http://localhost:3002 || exit 1
      interval: 10s
      timeout: 10s
      retries: 5
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    depends_on:
      - db
    environment:
      - MONGO_URI=mongodb://root:root@db:27017/todos?authSource=admin
    networks:
      - node-network
    expose:
      - "3001"
    healthcheck:
      test: curl --fail http://localhost:3001/api/todos || exit 1
      interval: 10s
      timeout: 10s
      retries: 5
  db:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - mongo_data:/data/db
    networks:
      - node-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet | grep -q 1
      interval: 10s
      timeout: 10s
      retries: 5
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:1.4
    container_name: nginx-exporter
    ports:
      - "9113:9113"
    command:
      - "--nginx.scrape-uri=http://nginx:80/stub_status"
      - "--web.listen-address=:9113"
    depends_on:
      - nginx
    networks:
      - node-network
      - monitoring-network
  mongodb-exporter:
    image: percona/mongodb_exporter:0.44.0
    container_name: mongodb-exporter
    environment:
      MONGODB_URI: mongodb://root:root@db:27017/admin
    ports:
      - "9216:9216"
    depends_on:
      - db
    networks:
      - monitoring-network
      - node-network
  k6:
    image: grafana/k6:latest
    container_name: k6-loadtest
    volumes:
      - ./k6:/scripts
    environment:
      - K6_PROMETHEUS_RW_SERVER_URL=http://prometheus:9090/api/v1/write
      - K6_PROMETHEUS_RW_TREND_AS_NATIVE_HISTOGRAM=true
    networks:
      - monitoring-network
    profiles:
      - testing
  
volumes:
  mongo_data:

networks:
  node-network:
  front-network:
  monitoring-network:
      external: true